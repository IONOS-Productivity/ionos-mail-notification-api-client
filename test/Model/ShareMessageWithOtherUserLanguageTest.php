<?php
/**
 * ShareMessageWithOtherUserLanguageTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  IONOS\MailNotificationAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Event Notification Handler
 *
 * Event Notification Handler
 *
 * The version of the OpenAPI document: 1.0.0-20240927113522
 * Contact: saas-dev@1und1.de
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace IONOS\MailNotificationAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ShareMessageWithOtherUserLanguageTest Class Doc Comment
 *
 * @category    Class
 * @description Language preference for the notification. If not set, market Locale of contract is selected.
 * @package     IONOS\MailNotificationAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ShareMessageWithOtherUserLanguageTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ShareMessageWithOtherUserLanguage"
     */
    public function testShareMessageWithOtherUserLanguage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "language"
     */
    public function testPropertyLanguage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "displayName"
     */
    public function testPropertyDisplayName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "country"
     */
    public function testPropertyCountry()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "variant"
     */
    public function testPropertyVariant()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "script"
     */
    public function testPropertyScript()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unicodeLocaleAttributes"
     */
    public function testPropertyUnicodeLocaleAttributes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unicodeLocaleKeys"
     */
    public function testPropertyUnicodeLocaleKeys()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "displayLanguage"
     */
    public function testPropertyDisplayLanguage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "displayScript"
     */
    public function testPropertyDisplayScript()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "displayCountry"
     */
    public function testPropertyDisplayCountry()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "displayVariant"
     */
    public function testPropertyDisplayVariant()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "extensionKeys"
     */
    public function testPropertyExtensionKeys()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iso3Language"
     */
    public function testPropertyIso3Language()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iso3Country"
     */
    public function testPropertyIso3Country()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
